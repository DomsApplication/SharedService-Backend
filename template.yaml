AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  deploy the serverless microservice:
    lambda's: authentication, authorization
    stepfunction's:

Parameters:
  ParameterInstancePrefix:
    Type: String
    Default: "shavika"
    Description: "Prefix to be used in names of the things created by this stack."
  TagProvisioner:
    Type: String
    Default: "SAM"
    Description: "Tag-Provisioner"
  TagProject:
    Type: String
    Default: "DOMS"
    Description: "Tag-Project"
  TagBusinessUnit:
    Type: String
    Default: "Platform"
    Description: "Tag-BusinessUnit"
  TagBusinessModel:
    Type: String
    Default: "shared"
    Description: "Tag-BusinessModel"
  TagProductVersion:
    Type: String
    Default: "2023.1.0.0"
    Description: "Tag-ProductVersion"
  StackName:
    Type: String
    Default: "shavika-service"
    Description: "Tag-ProductVersion"

  DataSourceName:
    Type: String
    Default: "doms"
    Description: "DynamoDB user management table with all tenant base"

Globals:
  Function:
    Runtime: java11
    Tracing: Active
    MemorySize: 512
    Timeout: 60


Resources:
  authenticationFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions-java/doms-authentication
      Handler: com.doms.authentication.App::handleRequest
      Role: !GetAtt AuthenticationLambdaExecutionRole.Arn
      Environment: # More info about Env Vars: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#environment-object
        Variables:
          JAVA_TOOL_OPTIONS: -XX:+TieredCompilation -XX:TieredStopAtLevel=1 # More info about tiered compilation https://aws.amazon.com/blogs/compute/optimizing-aws-lambda-function-performance-for-java/
      AutoPublishAlias: live
      SnapStart:
          ApplyOn: PublishedVersions

  # <<<<<<< {{ROLE}} Authentication lambda execution role  >>>>>>>>>>>
  AuthenticationLambdaExecutionRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: "sts:AssumeRole"

  # <<<<<<<  {{POLICY}} Basic Lambda execution policy >>>>>>>>>>>
  LambdaBasicExecutionPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: LambdaBasicExecution
      Roles:
        - !Ref AuthenticationLambdaExecutionRole
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: CreateLogGroup
            Effect: Allow
            Action:
              - logs:CreateLogGroup
            Resource:
              - "*"
          - Sid: WriteLogStreamsAndGroups
            Effect: Allow
            Action:
              - logs:CreateLogStream
              - logs:PutLogEvents
            Resource:
              - "*"

#############################################################################################################################################################
# {output}     
# More info about Output: 
# https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/outputs-section-structure.html
#############################################################################################################################################################
Outputs:
  AuthenticationFunctionArn:
    Description: "Authentication Lambda funcation ARN value"
    Value: !GetAtt authenticationFunction.Arn
